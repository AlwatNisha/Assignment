1. What are the types of Applications?
	(1) Desktop Applications: which are Installed directly on a computer and Runs offline or with limited internet use.
	(2) Web Applications: which are Runs on a web browser using internet and Doesn't require installation.
	(3) Mobile Applications: which are Installed on smartphones or tablets and it Can be native, hybrid, or cross-platform.
	(4) Enterprise Applications: which are Large-scale software for organizations and Handles complex business processes like HR, ERP, CRM.
	(5) Artificial Intelligence (AI) Applications: which Uses AI and ML to perform tasks like prediction, automation, etc.
	(6) Scientific / Engineering Applications: which are Used for calculations, simulations, or data analysis.
	(7) Game Applications: it is Interactive applications for entertainment and Built using game engines like Unity, Unreal. Platforms: PC, Console, Mobile.
	(8) System Applications: it Interacts with the hardware or OS directly and Typically comes pre-installed.
	(9) Cloud Applications: it has Accessed over the internet but has cloud-based backend.


2.What is programing? 
	Programming is telling a computer what to do and how to do it, using a special language (like Python, Java, or C++).

3.What is Python?
	Python is a high-level, interpreted, general-purpose programming language that emphasizes code readability and allows developers to write clear and logical code for both small and large-scale projects.


7. How memory is managed in Python? 
     Python uses a combination of techniques to manage memory automatically and efficiently:

	Reference Counting:	Each object tracks how many references point to it. When the count reaches 0, memory is freed.
	Garbage Collection:	Automatically removes objects with circular references using a generational approach.
	Memory Pooling :	Python uses internal memory pools for small objects (0–512 bytes) to improve performance.
	Heap Allocation:	All Python objects are stored in a shared memory area called the heap.
	Built-in Tools :	Modules like gc, sys, and tracemalloc help monitor and control memory usage.

8. What is the purpose continuing statement in python? 
	The continue statement is used inside loops to skip the current iteration and move to the next one.
						OR
	To skip certain parts of loop logic when a condition is met, without exiting the loop.

17. What are negative indexes and why are they used?
	In Python, negative indexes allow you to access elements from the end of a list, string, or other sequence types, instead of the beginning.
   and they are use for finding or grab the last element without knowing the length.
   and also Cleaner and more readable than using len() and Helpful in cutting parts from the end of sequences.

25.What is List? How will you reverse a list?
     A list is a built-in data structure in Python used to store multiple items in a single variable.
           1. Lists can store elements of different data types (integers, strings, etc.).
           2. Lists are ordered, changeable (mutable), and allow duplicate values.
           3. Lists are defined using square brackets [].

     to reverse a list:
                        1. Using slicing: the slicing technique with [::-1], which means "start from the end and go backwards."
                        2. Using the reverse() method: This reverses the list in place (changes the original list itself).

26. How will you remove last object from a list?
	By using pop() method.
    
27. Suppose list1 is [2, 33, 222, 14, and 25], what is list1 [-1]? 
	list1 [-1]= 25

28. Differentiate between append () and extend () methods? 
	append() Adds a single element at the end of the list.
		The element can be any data type (number, string, list, etc.).
	extend() Adds each element of an iterable (like list, tuple, string) to the end of the list.

30. How will you compare two lists? 
	By using the == operator.


43. What is tuple? Difference between list and tuple.
	A tuple is a built-in data type in Python used to store a collection of items.
		It is ordered,
		Allows duplicate values,
		But is immutable.
list:
	Lists are defined using square brackets []
	A list is a mutable, ordered collection of elements.

tuple:

	A tuple is an immutable, ordered collection of elements. 
	Once a tuple is created, its values cannot be changed. 
	Tuples are defined using parentheses (). 


51. How Do You Traverse Through a Dictionary Object in Python? 

	we can traverse a dictionary in Python by looping through its keys using for key in dict, its keys and values using for key, value    in dict.items().


52.How Do You Check the Presence of a Key in A Dictionary? 
	We can check the presence of a key in dictionary by using in keyword.


65. How Many Basic Types of Functions Are Available in Python? 
    there are some basic types of functions:
	1. Function with No Arguments and No Return Value:
		Accepts nothing, returns nothing.
		Just performs an action.
	2. Function with Arguments but No Return Value:
		Accepts input (arguments), but does not return anything.
	3. Function with No Arguments but with Return Value:
		Accepts nothing, but returns a result.
	4. Function with Arguments and with Return Value:
		Accepts input and returns a result.

  others:
	1.Anonymous Functions (lambda):
		Small, unnamed functions defined with the lambda keyword.
		Usually used for simple operations, often passed as arguments.
	2.Generator Functions
	3.Recursive Functions:
		Functions that call themselves, typically to solve problems like factorial or Fibonacci numbers.
		They can be any of the four basic types but are special due to self-reference.
	4.Built-in Functions:
		Functions provided by Python itself (e.g., print(), len(), max()).
	5.Methods:
		Functions defined inside classes, bound to objects (instance methods) or classes (class methods, static methods).

66. How can you pick a random item from a list or tuple?
	You can pick a random item from a list or tuple in Python using the random.choice() function from the built-in random module.

67. How can you pick a random item from a range? 
	by using these:
			random.choice()
			random.randint()
			random.randrange()



68. How can you get a random number in python? 
	By importing random module in python.
		import random


69. How will you set the starting value in generating random numbers? 
	To set the starting value for generating random numbers in Python, we use the random.seed() function from the random module.

70. How will you randomize the items of a list in place? 
	we can randomize the items of a list in place using the random.shuffle() function from Python’s random module.

71.What is File function in python? What are keywords to create and write file.
	File handling is the broad concept or process of working with files in Python.
	to create file keyword is "x".
	to write file keyword is "w".


83.Explain Exception handling? What is an Error in Python? 
	Exception handling : Exception handling is the process of catching and managing errors at runtime, so the program doesn't crash and can respond gracefully.
	Python provides the try-except block to handle exceptions.

	
	Error : An error in Python is a problem that occurs during the execution of a program. When Python encounters an error, it stops execution and throws an exception. There are two main types of errors:
									1. Syntax Errors
									2. Runtime Errors (Exceptions)



84. How many except statements can a try-except block have? Name Some built-in exception classes?
	There is no fixed limit to the number of except clauses we can have in a try-except block in Python.
	we can include multiple except statements, each handling a different exception type.
    Built-in exception Classes:	
				ValueError	
				TypeError	
				ZeroDivisionError	
				IndexError	
				KeyError	
				FileNotFoundError	
				NameError	
				AttributeError	
				ImportError	
				RuntimeError


85. When will the else part of try-except-else be executed? 
	The else part is executed only if no exception occurs in the try block.


86. Can one block of except statements handle multiple exception? 
	Yes, one except block can handle multiple exceptions by specifying them as a tuple.

87. When is the finally block executed?
	The finally block is always executed, regardless of whether:
								an exception occurs or not.
								the exception is handled or unhandled.
								there is a return, break, or continue in the try/except block.



88. What happens when „1‟== 1 is executed? 
	"1" is of type str and 1 is of type int so Python does not automatically convert types when using == Since types are different, the comparison returns False.




